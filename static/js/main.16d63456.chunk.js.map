{"version":3,"sources":["firebase.js","components/tracker/Graph.js","apis/coingecko.js","actions/index.js","components/tracker/Holdings.js","components/Header.js","components/tracker/Dashboard.js","components/SignUp.js","components/SignIn.js","components/tracker/AddTransaction.js","components/tracker/Transactions.js","components/App.js","reducers/authReducer.js","reducers/cryptoListReducer.js","reducers/cryptoReducer.js","reducers/firebaseReducer.js","reducers/uniqueCryptoReducer.js","reducers/index.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","measurementId","fire","firebase","initializeApp","connect","state","crypto","transactions","history","useHistory","useEffect","auth","onAuthStateChanged","user","push","chartData","datasets","data","result","Object","keys","length","reduce","res","value","coin","x","y","quantity","prices","currentPrice","coin_id","groupedTransactions","backgroundColor","borderColor","borderWidth","chartDataProfit","transaction_date","total_value","groupedCurrentProfit","className","options","plugins","title","display","text","padding","top","bottom","legend","tooltips","enabled","axios","create","baseURL","getTransactions","dispatch","a","database","ref","orderByChild","equalTo","on","snapshot","forEach","childSnapshot","id","key","val","uniqueTransactions","_","uniqBy","type","payload","console","error","uid","current_value","sumQuantity","b","sumValue","currentValue","map","t","data-label","decimalScale","thousandSeparator","displayType","Math","abs","prefix","suffix","renderTransactions","Header","to","onClick","e","props","signOut","React","Component","uniqueCrypto","cryptoPrices","coingecko","get","params","vs_currency","days","interval","response","price","format","Date","toLocaleString","formattedData","name","uniqueCryptoList","Holdings","signUp","formValues","createUserWithEmailAndPassword","email","password","renderError","touched","renderInput","input","label","meta","icon","autoComplete","onSubmit","validate","errors","confirmPassword","handleSubmit","component","signIn","signInWithEmailAndPassword","log","message","errorMessage","guestDetails","guestAccount","coinList","cryptoList","order","per_page","writeTransaction","userId","selectCoin","replace","totalValue","selectDate","date_added","renderDropDown","RenderDatePicker","onChange","placeholderText","dateFormat","selected","isValid","parseISO","toDate","disabledKeyboardNavigation","date","renderQuantity","placeholder","renderValue","renderRadio","removeTransaction","child","remove","App","basename","path","exact","SignIn","SignUp","Dashboard","AddTransaction","Transactions","INITIAL_STATE","isSignedIn","authReducer","action","cryptoListReducer","cryptoReducer","firebaseReducer","uniqueCryptoReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"sTAIMA,G,cAAiB,CACnBC,OAAQC,0CACRC,WAAYD,2CACZE,YAAaF,0EACbG,UAAWH,2BACXI,cAAeJ,uCACfK,kBAAmBL,qsBAAYM,uCAC/BC,MAAOP,4CACPQ,cAAeR,iBAKJS,EAFFC,IAASC,cAAcb,G,gBC0IrBc,eAPS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAMC,OACdC,aAAcF,EAAME,gBAIbH,EAlJD,SAAC,GAA8B,IAA5BE,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACjBC,EAAUC,cACdC,qBAAU,WACNT,EAAKU,OAAOC,oBAAmB,SAACC,GACvBA,GACDL,EAAQM,KAAK,UAItB,CAACN,IAEJ,IAuCMO,EAAY,CACdC,SAAS,CAAC,CACFC,KAlCgB,WACxB,IAAMC,EAAS,GAYf,OAVIC,OAAOC,KAAKb,GAAcc,OAAS,GACnCd,EAAaA,aAAae,QAAO,SAASC,EAAKC,GAM3C,OALKD,EAAIC,EAAMC,QACXF,EAAIC,EAAMC,MAAQ,CAAEC,EAAGF,EAAMC,KAAME,EAAG,GACtCT,EAAOJ,KAAKS,EAAIC,EAAMC,QAE1BF,EAAIC,EAAMC,MAAME,IAAMH,EAAMI,SAhBnB,SAACH,GAClB,GAAInB,EAAOmB,GAAM,CACb,IAAMI,EAASvB,EAAOmB,GACtB,OAAOI,EAAOA,EAAOR,OAAO,GAAGM,GAaUG,CAAaN,EAAMO,SACjDR,IACJ,IAEJL,EAqBOc,GACNC,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEJC,YAAa,CACT,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEJC,YAAa,KAuBnBC,EAAkB,CACxBpB,SAAS,CAAC,CACFC,KA5DqB,WACzB,IAAMC,EAAS,GAYf,OAVIC,OAAOC,KAAKb,GAAcc,OAAS,GACnCd,EAAaA,aAAae,QAAO,SAASC,EAAKC,GAM3C,OALKD,EAAIC,EAAMa,oBACXd,EAAIC,EAAMa,kBAAoB,CAAEX,EAAGF,EAAMa,iBAAkBV,EAAG,GAC9DT,EAAOJ,KAAKS,EAAIC,EAAMa,oBAE1Bd,EAAIC,EAAMa,kBAAkBV,IAAMH,EAAMc,YACjCf,IACJ,IAEJL,EA+CGqB,GACNN,gBAAiB,CAEb,2BAGJC,YAAa,CACT,yBAEJC,YAAa,KAwBrB,OACI,sBAAKK,UAAU,kBAAf,UACI,oBAAIA,UAAU,qBAAd,yCACA,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,oBAAf,SAAmC,cAAC,IAAD,CAAKvB,KAAMF,EAAW0B,QA1DhD,CACbC,QAAS,CACLC,MAAO,CACHC,SAAS,EACTC,KAAM,wBACNC,QAAS,CACLC,IAAK,GACLC,OAAQ,KAGhBC,OAAQ,CACJL,SAAS,GAEbM,SAAU,CACNC,SAAS,SA6Cb,qBAAKX,UAAU,oBAAf,SAAmC,cAAC,IAAD,CAAKvB,KAAMmB,EAAiBK,QAzBhD,CACvBC,QAAS,CACLC,MAAO,CACHC,SAAS,EACTC,KAAM,gCACNC,QAAS,CACLC,IAAK,GACLC,OAAQ,KAGhBC,OAAQ,CACJL,SAAS,GAEbM,SAAU,CACNC,SAAS,kB,yCC9HVC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,qC,2BCmFAC,EAAkB,SAAC1C,GAAD,8CAAU,WAAO2C,GAAP,SAAAC,EAAA,+EAEVxD,EAAKyD,WAAWC,IAAI,gBAAgBC,aAAa,UAAUC,QAAQhD,GAFzD,cAIxBiD,GAAG,SAAS,SAACC,GAClB,IAAMxD,EAAe,GAErBwD,EAASC,SAAQ,SAACC,GACd1D,EAAaO,KAAb,aACIoD,GAAID,EAAcE,KACfF,EAAcG,WAI7B,IAAMC,EAAqBC,IAAEC,OAAOhE,EAAc,QAElDiD,EAAS,CAAEgB,KAAM,mBAAoBC,QAASlE,IAC9CiD,EAAS,CAAEgB,KAAM,gBAAiBC,QAASJ,OAjBV,gDAoBzBK,QAAQC,MAAR,MApByB,yDAAV,uD,QCmDhBvE,eAPS,SAACC,GACrB,MAAQ,CACJE,aAAcF,EAAME,aACpBD,OAAQD,EAAMC,UAIkB,CAAEiD,mBAA3BnD,EAlIM,SAAC,GAA+C,IAA7CG,EAA4C,EAA5CA,aAAcgD,EAA8B,EAA9BA,gBAAiBjD,EAAa,EAAbA,OAC/CE,EAAUC,cACdC,qBAAU,WACNT,EAAKU,OAAOC,oBAAmB,SAACC,GACvBA,GACDL,EAAQM,KAAK,KAGbD,GAA6C,IAArCM,OAAOC,KAAKb,GAAcc,QAClCkC,EAAgB1C,EAAK+D,UAK9B,CAACrB,EAAiBhD,EAAcD,EAAQE,IAE3C,IAOMwB,EAAsB,WACxB,IAAMd,EAAS,GAcf,OAZIC,OAAOC,KAAKb,GAAcc,OAAS,GACnCd,EAAaA,aAAae,QAAO,SAASC,EAAKC,GAQ3C,OAPKD,EAAIC,EAAMC,QACXF,EAAIC,EAAMC,MAAQ,CAAEA,KAAMD,EAAMC,KAAMG,SAAU,EAAGU,YAAa,EAAGuC,cAAe,GAClF3D,EAAOJ,KAAKS,EAAIC,EAAMC,QAE1BF,EAAIC,EAAMC,MAAMG,WAAaJ,EAAMI,SACnCL,EAAIC,EAAMC,MAAMa,cAAgBd,EAAMc,YACtCf,EAAIC,EAAMC,MAAMoD,gBAAkBrD,EAAMI,SAlB/B,SAACH,GAClB,GAAInB,EAAOmB,GAAM,CACb,IAAMI,EAASvB,EAAOmB,GACtB,OAAOI,EAAOA,EAAOR,OAAO,GAAGM,GAesBG,CAAaN,EAAMO,SAC7DR,IACJ,IAEJL,GAGL4D,EAAa,WACf,GAAG3D,OAAOC,KAAKb,GAAcc,OAAS,EAIlC,OAHgBd,EAAaA,aAAae,QAAO,SAACmC,EAAGsB,GACjD,OAAOtB,IAAKsB,EAAEnD,WACf,IAILoD,EAAW,WACb,GAAG7D,OAAOC,KAAKb,GAAcc,OAAS,EAIlC,OAHgBd,EAAaA,aAAae,QAAO,SAACmC,EAAGsB,GACjD,OAAOtB,IAAKsB,EAAEzC,cACf,IAKL2C,EAAe,WACjB,GAAG9D,OAAOC,KAAKb,GAAcc,OAAS,EAIlC,OAHgBW,IAAsBV,QAAO,SAACmC,EAAGsB,GAC7C,OAAOtB,IAAKsB,EAAEF,gBACf,IA0BX,OACI,8BACI,sBAAKrC,UAAU,aAAf,UACI,oBAAIA,UAAU,qBAAd,gCACA,wBAAOA,UAAU,8BAAjB,UACI,gCACQ,+BACI,sCACA,0CACA,+CACA,sCACA,+CACA,6CACA,+CAlCD,WACvB,GAAIrB,OAAOC,KAAKb,GAAcc,OAAS,EAgBvC,OAfiBW,IAAsBkD,KAAI,SAAAC,GACvC,OACI,gCACI,+BACI,oBAAIC,aAAW,OAAf,SAAuBD,EAAE1D,OACzB,oBAAI2D,aAAW,WAAf,SAA0B,cAAC,IAAD,CAAc5D,MAAO2D,EAAEvD,SAAUyD,aAAc,EAAGC,mBAAmB,EAAMC,YAAa,WAClH,oBAAIH,aAAW,iBAAf,SAAgC,cAAC,IAAD,CAAc5D,MAAOgE,KAAKC,IAAIN,EAAE7C,YAAY6C,EAAEvD,UAAWyD,aAAc,EAAGC,mBAAmB,EAAMI,OAAQ,OAAKH,YAAa,WAC7J,oBAAIH,aAAW,OAAf,SAAsB,cAAC,IAAD,CAAc5D,MAAO2D,EAAE7C,YAAagD,mBAAmB,EAAMD,aAAc,EAAGK,OAAQ,OAAKH,YAAa,WAC9H,oBAAIH,aAAW,gBAAf,SAA+B,cAAC,IAAD,CAAc5D,MAAO2D,EAAEN,cAAeQ,aAAc,EAAGC,mBAAmB,EAAMI,OAAQ,OAAKH,YAAa,WACzI,oBAAIH,aAAW,WAAf,SAA0B,cAAC,IAAD,CAAc5D,MAAO2D,EAAEN,cAAcM,EAAE7C,YAAa+C,aAAc,EAAGC,mBAAmB,EAAMI,OAAQ,OAAKH,YAAa,WAClJ,oBAAIH,aAAW,WAAf,SAA0B,cAAC,IAAD,CAAc5D,OAAS2D,EAAEN,cAAcM,EAAE7C,aAAa6C,EAAE7C,YAAa,IAAK+C,aAAc,EAAGC,mBAAmB,EAAMK,OAAQ,IAAKJ,YAAa,eARpKJ,EAAE1D,SAiCTmE,GACD,gCACI,+BACI,uCACA,6BAAI,cAAC,IAAD,CAAcpE,MAAOsD,IAAeS,YAAa,OAAQF,aAAc,EAAGC,mBAAmB,MACjG,6BAAI,cAAC,IAAD,CAAc9D,MAAOgE,KAAKC,IAAIT,IAAWF,KAAgBO,aAAc,EAAGE,YAAa,OAAQG,OAAQ,OAAKJ,mBAAmB,MACnI,6BAAI,cAAC,IAAD,CAAc9D,MAAOwD,IAAYO,YAAa,OAAQG,OAAQ,OAAKL,aAAc,EAAGC,mBAAmB,MAC3G,6BAAI,cAAC,IAAD,CAAc9D,MAAOyD,IAAgBM,YAAa,OAAQF,aAAc,EAAGK,OAAQ,OAAKJ,mBAAmB,MAC/G,6BAAI,cAAC,IAAD,CAAc9D,MAAOyD,IAAeD,IAAYO,YAAa,OAAQF,aAAc,EAAGK,OAAQ,OAAKJ,mBAAmB,MAC1H,6BAAI,cAAC,IAAD,CAAc9D,OAAQyD,IAAeD,KAAYA,IAAW,IAAKO,YAAa,OAAQF,aAAc,EAAGM,OAAQ,IAAKL,mBAAmB,sB,gCClHjKO,G,mKACF,WAAS,IAAD,OACJ,OACI,sBAAKrD,UAAU,UAAf,UACI,cAAC,IAAD,CAAMsD,GAAG,aAAatD,UAAU,OAAhC,uBACA,cAAC,IAAD,CAAMsD,GAAG,gBAAgBtD,UAAU,OAAnC,0BACA,cAAC,IAAD,CAAMsD,GAAG,mBAAmBtD,UAAU,OAAtC,6BACA,cAAC,IAAD,CAAMsD,GAAG,IAAItD,UAAU,aAAauD,QAAS,SAAAC,GAAC,OAAI,EAAKC,MAAMC,WAA7D,6B,GAPKC,IAAMC,YAaZhG,cAAQ,KAAM,CAAE8F,QFkBR,yDAAM,WAAM1C,GAAN,SAAAC,EAAA,+EAEfxD,EAAKU,OAAOuF,UAFG,OAIrB1C,EAAS,CACLgB,KAAM,aAGVhB,EAAS,CACLgB,KAAM,iBAGVhB,EAAS,CACLgB,KAAM,uBAGVhB,EAAS,CACLgB,KAAM,wBAjBW,gDAqBbE,QAAQC,MAAR,MArBa,yDAAN,wDElBRvE,CAA2ByF,GC6B3BzF,eARS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAMC,OACdC,aAAcF,EAAME,aACpB8F,aAAchG,EAAMgG,gBAIY,CAAEC,aHuEd,SAAC7E,GAAD,8CAAU,WAAM+B,GAAN,iBAAAC,EAAA,+EAEP8C,EAAUC,IAAV,iBAAwB/E,EAAxB,iBAA6C,CAChEgF,OAAQ,CACRC,YAAa,MACbC,KAAM,KACNC,SAAU,WANgB,cAExBC,EAFwB,gBAUFA,EAAS5F,KAAKY,OAAOqD,KAAI,SAAA4B,GACjD,MAAO,CACHpF,EAAGqF,kBAAO,IAAIC,KAAKF,EAAM,IAAK,cAAcG,eAAe,SAC3DtF,EAAGmF,EAAM,OAba,OAUxBI,EAVwB,OAiB9B1D,EAAS,CAAEgB,KAAM,gBAAiBC,QAASyC,EAAeC,KAAM1F,IAjBlC,kDAoBtBiD,QAAQC,MAAR,MApBsB,0DAAV,wDGvEbvE,EAvCG,SAAC,GAAkD,IAAhDkG,EAA+C,EAA/CA,aAAc/F,EAAiC,EAAjCA,aAAc8F,EAAmB,EAAnBA,aACzC7F,EAAUC,cAqBd,OApBAC,qBAAU,WACNT,EAAKU,OAAOC,oBAAmB,SAACC,GACvBA,GACDL,EAAQM,KAAKtB,6BAWb,OARqB,WACrB,GAAyC,IAArC2B,OAAOC,KAAKiF,GAAchF,QAAgBR,EAItC,OAHUwF,EAAapF,KAAKiE,KAAI,SAAA5E,GAChC,OAAOgG,EAAahG,EAAOyB,YAK5BqF,QAIhB,CAACd,EAAc/F,EAAc8F,EAAc7F,IAG1C,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC6G,EAAD,U,QC8CGjH,G,OAAAA,YAAQ,KAAM,CAAEkH,OJ5ET,SAACC,GAAD,8CAAgB,WAAM/D,GAAN,eAAAC,EAAA,+EAEPxD,EAAKU,OAAO6G,+BAA+BD,EAAWE,MAAOF,EAAWG,UAFjE,OAExBb,EAFwB,OAI9BrD,EAAS,CACLgB,KAAM,UACNC,QAASoC,EAAShG,KAAK+D,MANG,gDAStBF,QAAQC,MAAR,MATsB,yDAAhB,wDI4EPvE,EA1EA,SAAC,GAAgB,IAAdkH,EAAa,EAAbA,OACRK,EAAc,SAAC,GAAwB,IAAtBhD,EAAqB,EAArBA,MACnB,GADwC,EAAdiD,SACXjD,EACX,OACI,qBAAKnC,UAAU,mBAAf,SACI,qBAAKA,UAAU,SAAf,SAAyBmC,OAMnCkD,EAAc,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAYC,GAAW,EAAjBzD,KAAiB,EAAXyD,MACvCzF,EAAS,gBAAYwF,EAAKrD,OAASqD,EAAKJ,QAAU,QAAU,IAElE,OACI,sBAAKpF,UAAWA,EAAhB,UACI,gCAAQuF,IACR,sBAAKvF,UAAU,qBAAf,UACI,mBAAGA,UAAWyF,IACd,iDAAWH,GAAX,IAAkBI,aAAa,MAAM1D,KAAMsD,EAAMtD,WAEpDmD,EAAYK,OASzB,OACI,qBAAKxF,UAAU,wBAAf,SACI,sBAAKA,UAAU,8BAAf,UACI,sBAAKA,UAAU,SAAf,UACI,oBAAIA,UAAU,YAAd,qBACI,cAAC,IAAD,CACI2F,SAVP,SAACZ,GACdD,EAAOC,IAUaa,SAAU,SAACb,GACP,IAAMc,EAAS,GAkBf,OAhBKd,EAAWE,QACZY,EAAOZ,MAAQ,2BAGdF,EAAWG,WACZW,EAAOX,SAAW,6BAGjBH,EAAWe,kBACZD,EAAOC,gBAAkB,6BAGzBf,EAAWG,WAAaH,EAAWe,kBACnCD,EAAOC,gBAAkB,sCAGtBD,GArBf,SAuBK,gBAAGE,EAAH,EAAGA,aAAH,OACG,uBAAMJ,SAAUI,EAAc/F,UAAU,gBAAxC,UACQ,cAAC,IAAD,CAAO2E,KAAK,QAAQ3C,KAAK,OAAOgE,UAAWX,EAAaE,MAAM,QAAQE,KAAK,cAC3E,cAAC,IAAD,CAAOd,KAAK,WAAW3C,KAAK,WAAWgE,UAAWX,EAAaE,MAAM,WAAWE,KAAK,cACrF,cAAC,IAAD,CAAOd,KAAK,kBAAkB3C,KAAK,WAAWgE,UAAWX,EAAaE,MAAM,mBAAmBE,KAAK,cACpG,wBAAQzF,UAAU,8BAAlB,qCAKxB,sBAAKA,UAAU,4BAAf,sCAAoE,cAAC,IAAD,CAAMsD,GAAG,IAAT,iCCgCrE1F,eAJS,SAACC,GACrB,MAAO,CAAEM,KAAMN,EAAMM,QAGe,CAAE8H,OLzFpB,SAAClB,GAAD,8CAAgB,WAAM/D,GAAN,eAAAC,EAAA,+EAEPxD,EAAKU,OAAO+H,2BAA2BnB,EAAWE,MAAOF,EAAWG,UAF7D,OAExBb,EAFwB,OAI9BrD,EAAS,CACLgB,KAAM,UACNC,QAASoC,EAAShG,KAAK+D,MANG,gDAW9BF,QAAQiE,IAAR,MACAnF,EAAS,CACLgB,KAAM,gBACNC,QAAS,KAAEmE,UAde,yDAAhB,wDKyFPxI,EAnGA,SAAC,GAAsB,IAApBqI,EAAmB,EAAnBA,OAAQ9H,EAAW,EAAXA,KAClBH,EAAUC,cAEdC,qBAAU,WACNT,EAAKU,OAAOC,oBAAmB,SAACC,GACxBA,GACAL,EAAQM,KAAK,oBAKzB,IAAM6G,EAAc,SAAC,GAAsB,EAApBhD,MACnB,GADuC,EAAbiD,SACXjH,EAAKkI,aAChB,OACI,qBAAKrG,UAAU,mBAAf,SACI,qBAAKA,UAAU,SAAf,SAAyB7B,EAAKkI,kBAMxChB,EAAc,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAYC,GAAW,EAAjBzD,KAAiB,EAAXyD,MACvCzF,EAAS,gBAAYwF,EAAKrD,OAASqD,EAAKJ,QAAU,QAAU,IAElE,OACI,sBAAKpF,UAAWA,EAAhB,UACI,gCAAQuF,IACR,sBAAKvF,UAAU,qBAAf,UACI,mBAAGA,UAAWyF,IACd,iDAAWH,GAAX,IAAkBI,aAAa,MAAM1D,KAAMsD,EAAMtD,WAEpDmD,EAAYK,OAyBnBc,EAAe,CACjBrB,MAAO,0BACPC,SAAU,oBAGd,OACQ,qBAAKlF,UAAU,wBAAf,SACI,sBAAKA,UAAU,8BAAf,UACI,sBAAKA,UAAU,SAAf,UACI,oBAAIA,UAAU,YAAd,qBACA,cAAC,IAAD,CACI2F,SA/BP,SAACZ,GACd,IACIkB,EAAOlB,GAEX,MAAMvB,GACFtB,QAAQiE,IAAI3C,KA2BIoC,SAAU,SAACb,GACP,IAAMc,EAAS,GAQf,OAPKd,EAAWE,QACZY,EAAOZ,MAAQ,2BAGdF,EAAWG,WACZW,EAAOX,SAAW,6BAEfW,GAXf,SAcK,gBAAGE,EAAH,EAAGA,aAAH,OACG,uBAAMJ,SAAUI,EAAc/F,UAAU,gBAAxC,UACQ,cAAC,IAAD,CAAO2E,KAAK,QAAQ3C,KAAK,OAAOgE,UAAWX,EAAaE,MAAM,QAAQE,KAAK,cAC3E,cAAC,IAAD,CAAOd,KAAK,WAAW3C,KAAK,WAAWgE,UAAWX,EAAaE,MAAM,WAAWE,KAAK,cACrF,wBAAQzF,UAAU,8BAAlB,8BAKpB,sBAAKA,UAAU,4BAAf,oCAAkE,cAAC,IAAD,CAAMsD,GAAG,UAAT,qBAAiC,6DAA+B,cAAC,IAAD,CAAMA,GAAG,aAAaC,QAAS,SAAAC,IA3C5J,SAACA,GAClB,IACIyC,EAAOzC,GAEX,MAAMA,GACFtB,QAAQiE,IAAI3C,IAsCkK+C,CAAaD,IAAjD,wC,mDCiFvI1I,G,cAAAA,aANS,SAACC,GACrB,MAAO,CACH2I,SAAU3I,EAAM4I,cAIgB,CAAEA,WNpChB,yDAAM,WAAMzF,GAAN,iBAAAC,EAAA,+EAED8C,EAAUC,IAAI,iBAAkB,CACnDC,OAAQ,CACJC,YAAa,MACbwC,MAAO,kBACPC,SAAU,OANM,OAElBtC,EAFkB,OAUlBK,EAAgBL,EAAS5F,KAAKiE,KAAI,SAAAzD,GACpC,MAAO,CACCsG,MAAOtG,EAAK0F,KACZ3F,MAAOC,EAAKyC,OAIxBV,EAAS,CAAEgB,KAAM,cAAeC,QAAQyC,IAjBhB,gDAoBhBxC,QAAQC,MAAR,MApBgB,yDAAN,uDMoC4ByE,iBNrHtB,SAAC7B,EAAY1G,GAAb,OAAsB,SAAC2C,GACnD,IACI,IAAMjD,EAAe,CACjB8I,OAAQxI,EACR2D,KAAM+C,EAAW/C,KACjB/C,KAAM8F,EAAW+B,WAAWvB,MAC5BhG,QAASwF,EAAW+B,WAAW9H,MAC/BI,SAA8B,SAApB2F,EAAW/C,KAAX,WAAiC+C,EAAW3F,SAAS2H,QAAQ,IAAK,KAAOhC,EAAW3F,SAAS2H,QAAQ,IAAK,IACpHjH,YAAiC,SAApBiF,EAAW/C,KAAkB,IAAI+C,EAAWiC,WAAWD,QAAQ,OAAK,IAAIA,QAAQ,IAAK,IAAMhC,EAAWiC,WAAWD,QAAQ,OAAK,IAAIA,QAAQ,IAAK,IAC5JlH,iBAAkBkF,EAAWkC,WAC7BC,WAAY3C,kBAAO,IAAIC,KAAQ,eAInC/G,EAAKyD,WAAWC,IAAI,gBAAgB7C,KAAKP,GAEzCiD,EAAS,CACLgB,KAAM,oBACNC,QAASlE,IAIjB,MAAOyF,GAAKtB,QAAQC,MAAMqB,OM+Ff5F,EAnKQ,SAAC,GAAgD,IAA9C6I,EAA6C,EAA7CA,WAAYD,EAAiC,EAAjCA,SAAUI,EAAuB,EAAvBA,iBACxC5I,EAAUC,cACdC,qBAAU,WACNT,EAAKU,OAAOC,oBAAmB,SAACC,GACvBA,GACDL,EAAQM,KAAK,KAGbD,GAAyC,IAAjCM,OAAOC,KAAK4H,GAAU3H,QAC1B4H,SAIb,CAACD,EAAUC,EAAYzI,IAE1B,IAYMmJ,EAAiB,SAAC,GAA4B,IAA1B7B,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC9BxF,EAAS,8BAA0BwF,EAAKrD,OAASqD,EAAKJ,QAAU,QAAU,IAEhF,OACI,sBAAKpF,UAAWA,EAAhB,UACI,uBAAOA,UAAU,cAAjB,SAAgCuF,IAChC,cAAC,IAAD,2BAAYD,GAAZ,IAAmBI,aAAa,MAAM1D,KAAK,OAAO/B,QAASuG,EAAS/H,KAAMuB,UAAU,qBAM1FoH,EAAmB,SAAC,GAA8D,IAA5DzC,EAA2D,EAA3DA,KAAMY,EAAqD,EAArDA,MAAOD,EAA8C,EAA9CA,MAAOE,EAAuC,EAAvCA,KAAuC,IAAjCF,MAAStG,EAAwB,EAAxBA,MACrDgB,GAD6E,EAAjBqH,SACnD,8BAA0B7B,EAAKrD,OAASqD,EAAKJ,QAAU,QAAU,KAChF,OACI,sBAAKpF,UAAWA,EAAhB,UACA,uBAAOA,UAAU,cAAjB,SAAgCuF,IAC5B,cAAC,IAAD,2BACID,GADJ,IAEAtF,UAAU,cACVsH,gBAAgB,aAChBC,WAAW,IACXC,SAAUxI,GAASyI,kBAAQC,kBAAS1I,IAAU2I,kBAAOD,kBAAS1I,IAAS,KACvE4I,4BAA0B,EAC1BjD,KAAMA,EACN0C,SAAU,SAACQ,GAEPJ,kBAAQI,GACRvC,EAAM+B,SAAS9C,kBAAO,IAAIC,KAAKqD,GAAO,eAG1CvC,EAAM+B,SAAS,cASrBS,EAAiB,SAAC,GAAyC,IAAvCvC,EAAsC,EAAtCA,MAAOD,EAA+B,EAA/BA,MAAOE,EAAwB,EAAxBA,KAAMuC,EAAkB,EAAlBA,YACpC/H,EAAS,8BAA0BwF,EAAKrD,OAASqD,EAAKJ,QAAU,QAAU,IAEhF,OACI,sBAAKpF,UAAWA,EAAhB,UACI,uBAAOA,UAAU,cAAjB,SAAgCuF,IAChC,cAAC,IAAD,2BAAkBD,GAAlB,IAAyBI,aAAa,MAAM1D,KAAK,OAAOhC,UAAU,cAAc+H,YAAaA,EAAajF,mBAAmB,SAMnIkF,EAAc,SAAC,GAAyC,IAAvCzC,EAAsC,EAAtCA,MAAOD,EAA+B,EAA/BA,MAAOE,EAAwB,EAAxBA,KAAMuC,EAAkB,EAAlBA,YACjC/H,EAAS,8BAA0BwF,EAAKrD,OAASqD,EAAKJ,QAAU,QAAU,IAEhF,OACI,sBAAKpF,UAAWA,EAAhB,UACI,uBAAOA,UAAU,cAAjB,SAAgCuF,IAChC,cAAC,IAAD,2BAAkBD,GAAlB,IAAyBI,aAAa,MAAM1D,KAAK,OAAOhC,UAAU,cAAc+H,YAAaA,EAAa7E,OAAQ,OAAKJ,mBAAmB,SAMhJmF,EAAc,SAAC,GAAyC,IAAvC1C,EAAsC,EAAtCA,MAAOD,EAA+B,EAA/BA,MAAOE,EAAwB,EAAxBA,KAAMuC,EAAkB,EAAlBA,YACjC/H,EAAS,mBAAewF,EAAKrD,OAASqD,EAAKJ,QAAU,QAAU,IAErE,OACI,sBAAKpF,UAAWA,EAAhB,UACI,gCAAQuF,IACR,iDAAWD,GAAX,IAAkBI,aAAa,MAAM1D,KAAK,QAAQ+F,YAAaA,SAK3E,OACI,gCACI,cAAC,EAAD,IACA,qBAAK/H,UAAU,eAAf,SACI,sBAAKA,UAAU,kBAAf,UACQ,oBAAIA,UAAU,qBAAd,6BACA,cAAC,IAAD,CACI2F,SA9FP,SAACZ,GACd,IACItH,EAAKU,OAAOC,oBAAmB,SAACC,GAC5BuI,EAAiB7B,EAAY1G,EAAK+D,QAEtCpE,EAAQM,KAAK,iBAEjB,MAAOkF,GACHtB,QAAQiE,IAAI3C,KAuFIoC,SAAU,SAACb,GACP,IAAMc,EAAS,GAoBf,OAnBKd,EAAW/C,OACZ6D,EAAO7D,KAAO,sCAGb+C,EAAWkC,aACZpB,EAAOoB,WAAa,sCAGnBlC,EAAW+B,aACZjB,EAAOiB,WAAa,0BAGnB/B,EAAW3F,WACZyG,EAAOzG,SAAW,6BAGjB2F,EAAWiC,aACZnB,EAAOmB,WAAa,0BAEjBnB,GAvBf,SA0BK,gBAAGE,EAAH,EAAGA,aAAH,OACG,sBAAMJ,SAAUI,EAAc/F,UAAU,gBAAxC,SACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,cAAC,IAAD,CAAO2E,KAAK,OAAOqB,UAAWiC,EAAajG,KAAK,QAAQuD,MAAM,SAASvG,MAAM,WAC7E,cAAC,IAAD,CAAO2F,KAAK,OAAOqB,UAAWiC,EAAajG,KAAK,QAAQuD,MAAM,QAAOvG,MAAM,YAE/E,cAAC,IAAD,CAAO2F,KAAK,aAAaqB,UAAWoB,EAAkB7B,MAAM,qBAC5D,cAAC,IAAD,CAAOZ,KAAK,aAAaqB,UAAWmB,EAAgB5B,MAAM,gBAC1D,cAAC,IAAD,CAAOZ,KAAK,WAAWqB,UAAW8B,EAAgBvC,MAAM,aACxD,cAAC,IAAD,CAAOZ,KAAK,aAAaqB,UAAWgC,EAAazC,MAAM,cAAcwC,YAAY,SACjF,wBAAQ/H,UAAU,8BAAlB,sCCnDzBpC,G,OAAAA,aANS,SAACC,GACrB,MAAQ,CACJE,aAAcF,EAAME,gBAIY,CAAEgD,kBAAiBmH,kBPA1B,SAACvG,GAAD,8CAAS,WAAOX,GAAP,SAAAC,EAAA,+EAEXxD,EAAKyD,WAAWC,IAAI,gBAFT,cAIzBgH,MAAMxG,GAAKyG,SAJc,gDAO1BlG,QAAQC,MAAR,MAP0B,yDAAT,wDOAlBvE,EApGM,SAAC,GAA0D,IAAxDG,EAAuD,EAAvDA,aAAcgD,EAAyC,EAAzCA,gBAAiBmH,EAAwB,EAAxBA,kBAC/ClK,EAAUC,cACdC,qBAAU,WACNT,EAAKU,OAAOC,oBAAmB,SAACC,GACvBA,GACDL,EAAQM,KAAK,KAGbD,GAA6C,IAArCM,OAAOC,KAAKb,GAAcc,QAClCkC,EAAgB1C,EAAK+D,UAI9B,CAACrB,EAAiBhD,EAAcC,IAEnC,IAAMsE,EAAa,WACf,GAAGvE,EAIC,OAHgBA,EAAaA,aAAae,QAAO,SAACmC,EAAGsB,GACjD,OAAOtB,IAAKsB,EAAEnD,WACf,IAILoD,EAAW,WACb,GAAGzE,EAIC,OAHgBA,EAAaA,aAAae,QAAO,SAACmC,EAAGsB,GACjD,OAAOtB,IAAKsB,EAAEzC,cACf,IA2BX,OAAyC,IAArCnB,OAAOC,KAAKb,GAAcc,OACnB,6CAIP,gCACI,cAAC,EAAD,IACA,sBAAKmB,UAAU,kBAAf,UACI,oBAAIA,UAAU,qBAAd,oCACA,wBAAOA,UAAU,8BAAjB,UACI,gCACQ,+BACI,kDACA,sCACA,sCACA,0CACA,gDACA,uCACA,8CAxCD,WACvB,GAAIjC,EAgBJ,OAfiBA,EAAaA,aAAa2E,KAAI,SAAAC,GAC3C,OACI,gCACI,+BACI,oBAAIC,aAAW,mBAAf,SAAmCD,EAAE9C,mBACrC,oBAAI+C,aAAW,OAAf,SAAuBD,EAAE1D,OACzB,oBAAI2D,aAAW,OAAf,SAAuBD,EAAEX,OACzB,oBAAIY,aAAW,WAAf,SAA0B,cAAC,IAAD,CAAc5D,MAAO2D,EAAEvD,SAAUyD,aAAc,EAAGC,mBAAmB,EAAMC,YAAa,WAClH,oBAAIH,aAAW,iBAAf,SAAgC,cAAC,IAAD,CAAc5D,MAAO2D,EAAE7C,YAAY6C,EAAEvD,SAAUyD,aAAc,EAAGC,mBAAmB,EAAMI,OAAQ,OAAKH,YAAa,WACnJ,oBAAIH,aAAW,QAAf,SAAuB,cAAC,IAAD,CAAc5D,MAAO2D,EAAE7C,YAAagD,mBAAmB,EAAMI,OAAQ,OAAKH,YAAa,WAC9G,6BAAI,mBAAG/C,UAAU,iBAAiBuD,QAAS,SAAAC,GAAC,OAAI0E,EAAkBvF,EAAEjB,aARhEiB,EAAEjB,OAuCT0B,GACD,gCACI,+BACI,uCACA,uBACA,uBACA,6BAAI,cAAC,IAAD,CAAcpE,MAAOsD,IAAeS,YAAa,OAAQF,aAAc,EAAGC,mBAAmB,MACjG,6BAAI,cAAC,IAAD,CAAc9D,MAAOwD,IAAWF,IAAeO,aAAc,EAAGE,YAAa,OAAQG,OAAQ,OAAKJ,mBAAmB,MACzH,6BAAI,cAAC,IAAD,CAAc9D,MAAOwD,IAAYO,YAAa,OAAQG,OAAQ,OAAKL,aAAc,EAAGC,mBAAmB,MAC3G,yCCrEbuF,EAhBH,WACR,OACI,qBAAKrI,UAAU,eAAf,SACI,cAAC,IAAD,CAAesI,SAAUtL,4BAAzB,SACI,gCACI,cAAC,IAAD,CAAOuL,KAAK,IAAIC,OAAK,EAACxC,UAAWyC,IACjC,cAAC,IAAD,CAAOF,KAAK,UAAUvC,UAAW0C,IACjC,cAAC,IAAD,CAAOH,KAAK,aAAavC,UAAW2C,IACpC,cAAC,IAAD,CAAOJ,KAAK,mBAAmBvC,UAAW4C,IAC1C,cAAC,IAAD,CAAOL,KAAK,gBAAgBvC,UAAW6C,YCjBrDC,EAAgB,CAClBC,WAAY,KACZlC,OAAQ,KACRR,aAAc,IAmBH2C,EAfK,WAAoC,IAAnCnL,EAAkC,uDAA1BiL,EAAeG,EAAW,uCACnD,OAAQA,EAAOjH,MACX,IAAK,UACD,OAAO,2BAAKnE,GAAZ,IAAmBkL,YAAY,EAAMlC,OAAQoC,EAAOhH,UACxD,IAAK,WACD,OAAO,2BAAKpE,GAAZ,IAAmBkL,YAAY,EAAOlC,OAAQ,OAClD,IAAK,UACD,OAAO,2BAAKhJ,GAAZ,IAAmBkL,YAAY,EAAMlC,OAAQoC,EAAOhH,UACxD,IAAK,gBACD,OAAO,2BAAKpE,GAAZ,IAAmBkL,YAAY,EAAOlC,OAAQ,KAAMR,aAAc4C,EAAOhH,UAC7E,QACI,OAAOpE,ICTJqL,EATW,WAAyB,IAAxBrL,EAAuB,uDAAf,GAAIoL,EAAW,uCAC9C,OAAQA,EAAOjH,MACX,IAAK,cACD,OAAO,2BAAKnE,GAAZ,IAAmBY,KAAMwK,EAAOhH,UACpC,QACI,OAAOpE,I,QCMJsL,EAXO,WAAyB,IAAxBtL,EAAuB,uDAAf,GAAIoL,EAAW,uCAC1C,OAAQA,EAAOjH,MACX,IAAK,gBACD,OAAO,2BAAKnE,GAAZ,kBAAoBoL,EAAOtE,KAAOsE,EAAOhH,UAC7C,IAAK,eACD,OAAO,eAAKpE,EAAQ,IACxB,QACI,OAAOA,ICMJuL,GAbS,WAAyB,IAAxBvL,EAAuB,uDAAf,GAAIoL,EAAW,uCAC5C,OAAQA,EAAOjH,MACX,IAAK,qBAEL,IAAK,mBACD,OAAO,2BAAKnE,GAAZ,IAAmBE,aAAckL,EAAOhH,UAC5C,IAAK,qBACD,OAAO,eAAKpE,EAAQ,IACxB,QACI,OAAOA,ICEJwL,GAXa,WAAyB,IAAxBxL,EAAuB,uDAAf,GAAIoL,EAAW,uCAChD,OAAQA,EAAOjH,MACX,IAAK,gBACD,OAAO,2BAAKnE,GAAZ,IAAmBY,KAAMwK,EAAOhH,UACpC,IAAK,sBACD,OAAO,eAAKpE,EAAQ,IACxB,QACI,OAAOA,ICAJyL,eAAgB,CAC3BnL,KAAM6K,EACNlL,OAAQqL,EACR1C,WAAYyC,EACZnL,aAAcqL,GACdvF,aAAcwF,KCHZE,GAAmBC,OAAOC,sCAAwCC,IAClEC,GAAQC,YACVC,GACAN,GAAiBO,YAAgBC,OAGrCC,IAASC,OACL,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACA,cAAC,EAAD,MAEAO,SAASC,cAAc,Y","file":"static/js/main.16d63456.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = { \r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fire;\r\n","import React, { useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { useHistory } from 'react-router-dom';\r\nimport fire from '../../firebase';\r\nimport './Graph.css';\r\n\r\nconst Graph = ({ crypto, transactions }) => {\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        fire.auth().onAuthStateChanged((user) => {\r\n            if (!user) {\r\n                history.push('/');\r\n            } \r\n        })\r\n        \r\n    }, [history]);\r\n\r\n    const currentPrice = (coin) => {\r\n        if (crypto[coin]){\r\n            const prices = crypto[coin];\r\n            return prices[prices.length-1].y;\r\n        }    \r\n    }\r\n\r\n    const groupedTransactions = () => {\r\n        const result = [];\r\n\r\n        if (Object.keys(transactions).length > 0) {\r\n            transactions.transactions.reduce(function(res, value) {\r\n                if (!res[value.coin]) {\r\n                    res[value.coin] = { x: value.coin, y: 0 };\r\n                    result.push(res[value.coin])\r\n                }\r\n                res[value.coin].y += +value.quantity*currentPrice(value.coin_id);  \r\n                return res;\r\n                }, {});\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const groupedCurrentProfit = () => {\r\n        const result = [];\r\n\r\n        if (Object.keys(transactions).length > 0) {\r\n            transactions.transactions.reduce(function(res, value) {\r\n                if (!res[value.transaction_date]) {\r\n                    res[value.transaction_date] = { x: value.transaction_date, y: 0 };\r\n                    result.push(res[value.transaction_date])\r\n                }\r\n                res[value.transaction_date].y += +value.total_value;  \r\n                return res;\r\n                }, {});\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const chartData = {\r\n        datasets:[{\r\n                data: groupedTransactions(),\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(54, 162, 235, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(153, 102, 255, 0.2)',\r\n                    'rgba(255, 159, 64, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(153, 102, 255, 1)',\r\n                    'rgba(255, 159, 64, 1)'\r\n                ],\r\n                borderWidth: 1\r\n        }]\r\n    }      \r\n\r\n    const chartOptions = { \r\n            plugins: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Current Value by Coin',\r\n                    padding: {\r\n                        top: 10,\r\n                        bottom: 10\r\n                    }\r\n                },\r\n                legend: {\r\n                    display: false\r\n                },\r\n                tooltips: {\r\n                    enabled: false\r\n                }     \r\n            }\r\n        }\r\n\r\n    const chartDataProfit = {\r\n    datasets:[{\r\n            data: groupedCurrentProfit(),\r\n            backgroundColor: [\r\n                \r\n                'rgba(54, 162, 235, 0.2)',\r\n                \r\n            ],\r\n            borderColor: [\r\n                'rgba(54, 162, 235, 1)',\r\n            ],\r\n            borderWidth: 1\r\n    }]\r\n    }   \r\n    \r\n    const chartOptionsProfit = { \r\n        plugins: {\r\n            title: {\r\n                display: true,\r\n                text: 'Value of Transactions by Date',\r\n                padding: {\r\n                    top: 10,\r\n                    bottom: 10\r\n                }\r\n            },\r\n            legend: {\r\n                display: false\r\n            },\r\n            tooltips: {\r\n                enabled: false\r\n            }     \r\n        }\r\n    }\r\n   \r\n  \r\n    return (\r\n        <div className=\"ui segment teal\">\r\n            <h3 className=\"ui dividing header\">Current Portfolio Breakdown</h3>\r\n            <div className=\"ui grid\">\r\n                <div className=\"eight wide column\"><Bar data={chartData} options={chartOptions} /></div>\r\n                <div className=\"eight wide column\"><Bar data={chartDataProfit} options={chartOptionsProfit} /></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        crypto: state.crypto,\r\n        transactions: state.transactions   \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Graph);","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.coingecko.com/api/v3'\r\n});","import coingecko from \"../apis/coingecko\";\r\nimport fire from \"../firebase\";\r\nimport { format } from 'date-fns';\r\nimport _ from 'lodash';\r\n\r\nexport const signUp = (formValues) => async dispatch => {\r\n    try {\r\n        const response = await fire.auth().createUserWithEmailAndPassword(formValues.email, formValues.password);\r\n\r\n        dispatch({\r\n            type: 'SIGN_UP',\r\n            payload: response.user.uid\r\n            });\r\n    }\r\n    catch (e) { console.error(e); }\r\n};\r\n\r\n\r\nexport const signIn = (formValues) => async dispatch => {\r\n    try {\r\n        const response = await fire.auth().signInWithEmailAndPassword(formValues.email, formValues.password);\r\n\r\n        dispatch({\r\n            type: 'SIGN_IN',\r\n            payload: response.user.uid\r\n        });\r\n\r\n    }\r\n    catch (e) { \r\n        console.log(e);\r\n        dispatch({\r\n            type: 'ERROR_SIGN_IN',\r\n            payload: e.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const signOut = () => async dispatch => {\r\n    try {\r\n        await fire.auth().signOut();\r\n        \r\n        dispatch({\r\n            type: 'SIGN_OUT'\r\n        });\r\n\r\n        dispatch({\r\n            type: 'CLEAR_PRICES'\r\n        });\r\n\r\n        dispatch({\r\n            type: 'CLEAR_TRANSACTIONS'\r\n        });\r\n\r\n        dispatch({\r\n            type: 'CLEAR_UNIQUE_CRYPTO'\r\n        });\r\n\r\n    }\r\n    catch (e) { console.error(e); }\r\n};\r\n\r\nexport const writeTransaction = (formValues, user) => (dispatch) => {\r\n    try {\r\n        const transactions = {\r\n            userId: user,\r\n            type: formValues.type,\r\n            coin: formValues.selectCoin.label,\r\n            coin_id: formValues.selectCoin.value,\r\n            quantity: formValues.type === 'Sold' ? `-${formValues.quantity.replace(',', '')}`: formValues.quantity.replace(',', ''),\r\n            total_value: formValues.type === 'Sold' ? '-'+formValues.totalValue.replace('£', '').replace(',', '') : formValues.totalValue.replace('£', '').replace(',', ''),\r\n            transaction_date: formValues.selectDate,\r\n            date_added: format(new Date(), \"dd-MM-yyyy\"),\r\n            \r\n        };\r\n\r\n        fire.database().ref('Transactions').push(transactions);\r\n\r\n        dispatch({\r\n            type: 'WRITE_TRANSACTION',\r\n            payload: transactions\r\n        })\r\n\r\n    }\r\n    catch (e) { console.error(e); }\r\n};\r\n\r\nexport const getTransactions = (user) => async (dispatch) => {\r\n    try {\r\n        const response = await fire.database().ref('Transactions').orderByChild('userId').equalTo(user);\r\n        \r\n        response.on('value', (snapshot) => {\r\n            const transactions = [];\r\n\r\n            snapshot.forEach((childSnapshot) => {\r\n                transactions.push({\r\n                    id: childSnapshot.key,\r\n                    ...childSnapshot.val()\r\n                });\r\n            });\r\n\r\n        const uniqueTransactions = _.uniqBy(transactions, 'coin');\r\n\r\n        dispatch({ type: 'GET_TRANSACTIONS', payload: transactions })\r\n        dispatch({ type: 'UNQIUE_CRYPTO', payload: uniqueTransactions })\r\n        });\r\n    }   \r\n    catch (e) { console.error(e); }\r\n};\r\n\r\nexport const removeTransaction = (key) => async (dispatch) => {\r\n    try {\r\n        const response = await fire.database().ref('Transactions');\r\n        \r\n        response.child(key).remove();\r\n       \r\n    }   \r\n    catch (e) { console.error(e); }\r\n};\r\n\r\nexport const cryptoPrices = (coin) => async dispatch => {\r\n    try {\r\n        const response = await coingecko.get(`/coins/${coin}/market_chart`, { \r\n            params: {\r\n            vs_currency: 'gbp',\r\n            days: '90',\r\n            interval: 'daily'\r\n            }\r\n        });\r\n\r\n        const formattedData = await response.data.prices.map(price => {\r\n            return {\r\n                x: format(new Date(price[0]), \"dd-MM-yyyy\").toLocaleString(\"en-GB\"),\r\n                y: price[1]\r\n            };   \r\n        });\r\n\r\n        dispatch({ type: 'CRYPTO_PRICES', payload: formattedData, name: coin})\r\n\r\n    } \r\n    catch (e) { console.error(e); }\r\n};\r\n\r\nexport const cryptoList = () => async dispatch => {\r\n    try {\r\n        const response = await coingecko.get('/coins/markets', {\r\n            params: {\r\n                vs_currency: 'gbp',\r\n                order: 'market_cap_desc',\r\n                per_page: 150\r\n        }\r\n        });\r\n\r\n        const formattedData = response.data.map(coin => {\r\n            return {\r\n                    label: coin.name, \r\n                    value: coin.id\r\n            };\r\n        });\r\n        \r\n        dispatch({ type: 'CRYPTO_LIST', payload:formattedData })\r\n\r\n    } \r\n    catch (e) { console.error(e); }\r\n};\r\n\r\nexport const portfolioValue = (coin, dates) => async (dispatch, getState) => {\r\n    try {\r\n        \r\n        \r\n        const formattedData = (date) => getState().crypto[coin].map(c => {\r\n                return ({\r\n                    x: c.x,\r\n                    y: c.x.includes(date) ? c.y : 0\r\n                });\r\n\r\n            })\r\n            \r\n        const eachDate = dates.map(d => { return formattedData(d.date) });\r\n\r\n        \r\n        dispatch({ type: 'PORTFOLIO_VALUE', payload: eachDate, name: coin })\r\n    }\r\n    catch (e) { console.error(e); }\r\n}   \r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getTransactions } from '../../actions';\r\nimport fire from '../../firebase';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst Transactions = ({ transactions, getTransactions, crypto }) => {\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        fire.auth().onAuthStateChanged((user) => {\r\n            if (!user) {\r\n                history.push('/');\r\n            }\r\n\r\n            if (user && Object.keys(transactions).length === 0){\r\n                getTransactions(user.uid);\r\n            }\r\n                \r\n        })  \r\n        \r\n    }, [getTransactions, transactions, crypto, history]);\r\n        \r\n    const currentPrice = (coin) => {\r\n        if (crypto[coin]){\r\n            const prices = crypto[coin];\r\n            return prices[prices.length-1].y;\r\n        }    \r\n    }\r\n\r\n    const groupedTransactions = () => {\r\n        const result = [];\r\n\r\n        if (Object.keys(transactions).length > 0) {\r\n            transactions.transactions.reduce(function(res, value) {\r\n                if (!res[value.coin]) {\r\n                    res[value.coin] = { coin: value.coin, quantity: 0, total_value: 0, current_value: 0 };\r\n                    result.push(res[value.coin])\r\n                }\r\n                res[value.coin].quantity += +value.quantity;\r\n                res[value.coin].total_value += +value.total_value;  \r\n                res[value.coin].current_value += +value.quantity*currentPrice(value.coin_id);  \r\n                return res;\r\n                }, {});\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const sumQuantity= () => {\r\n        if(Object.keys(transactions).length > 0) {\r\n            const sumList = transactions.transactions.reduce((a, b) => {\r\n                return a + +b.quantity;\r\n            }, 0);\r\n            return sumList;\r\n        }  \r\n    }\r\n    const sumValue = () => {\r\n        if(Object.keys(transactions).length > 0) {\r\n            const sumList = transactions.transactions.reduce((a, b) => {\r\n                return a + +b.total_value;\r\n            }, 0);\r\n            return sumList;\r\n        }  \r\n    }\r\n\r\n    const currentValue = () => {\r\n        if(Object.keys(transactions).length > 0) {\r\n            const sumList = groupedTransactions().reduce((a, b) => {\r\n                return a + +b.current_value;\r\n            }, 0);\r\n            return sumList;\r\n        }  \r\n    }\r\n\r\n    const renderTransactions = () => {\r\n        if (Object.keys(transactions).length > 0){\r\n            const list = groupedTransactions().map(t => {\r\n            return (\r\n                <tbody key={t.coin}>\r\n                    <tr>\r\n                        <td data-label=\"Coin\">{t.coin}</td>\r\n                        <td data-label=\"Quantity\"><NumberFormat value={t.quantity} decimalScale={2} thousandSeparator={true} displayType={'text'} /></td>\r\n                        <td data-label=\"Price per coin\"><NumberFormat value={Math.abs(t.total_value/t.quantity)} decimalScale={2} thousandSeparator={true} prefix={'£'} displayType={'text'} /></td>\r\n                        <td data-label=\"Cost\"><NumberFormat value={t.total_value} thousandSeparator={true} decimalScale={4} prefix={'£'} displayType={'text'} /></td>\r\n                        <td data-label=\"Current Value\"><NumberFormat value={t.current_value} decimalScale={2} thousandSeparator={true} prefix={'£'} displayType={'text'} /></td>\r\n                        <td data-label=\"Net Gain\"><NumberFormat value={t.current_value-t.total_value} decimalScale={2} thousandSeparator={true} prefix={'£'} displayType={'text'} /></td>\r\n                        <td data-label=\"% Change\"><NumberFormat value={((t.current_value-t.total_value)/t.total_value)*100} decimalScale={2} thousandSeparator={true} suffix={'%'} displayType={'text'} /></td>\r\n                    </tr>\r\n                </tbody>\r\n            );\r\n        })\r\n        return list;\r\n    }\r\n    \r\n}\r\n    return (\r\n        <div>\r\n            <div className=\"ui segment\">\r\n                <h3 className=\"ui dividing header\">View your holdings</h3>\r\n                <table className=\"ui celled table unstackable\">\r\n                    <thead>\r\n                            <tr>\r\n                                <th>Coin</th>\r\n                                <th>Quantity</th>\r\n                                <th>Average Price</th>\r\n                                <th>Cost</th> \r\n                                <th>Current Value</th>\r\n                                <th>Profit/Loss</th>\r\n                                <th>% Change</th>\r\n                            </tr>\r\n                        </thead>\r\n                    {renderTransactions()}\r\n                    <tfoot>\r\n                        <tr>\r\n                            <th>Total</th>\r\n                            <th><NumberFormat value={sumQuantity()} displayType={'text'} decimalScale={2} thousandSeparator={true} /></th>\r\n                            <th><NumberFormat value={Math.abs(sumValue()/sumQuantity())} decimalScale={2} displayType={'text'} prefix={'£'} thousandSeparator={true} /></th>\r\n                            <th><NumberFormat value={sumValue()} displayType={'text'} prefix={'£'} decimalScale={2} thousandSeparator={true} /></th>\r\n                            <th><NumberFormat value={currentValue()} displayType={'text'} decimalScale={2} prefix={'£'} thousandSeparator={true} /></th>\r\n                            <th><NumberFormat value={currentValue()-sumValue()} displayType={'text'} decimalScale={2} prefix={'£'} thousandSeparator={true} /></th>\r\n                            <th><NumberFormat value={(currentValue()-sumValue())/sumValue()*100} displayType={'text'} decimalScale={2} suffix={'%'} thousandSeparator={true} /></th>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({ \r\n        transactions: state.transactions,\r\n        crypto: state.crypto\r\n     })\r\n};\r\n\r\nexport default connect(mapStateToProps, { getTransactions })(Transactions);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../actions/index';\r\nimport './Header.css';\r\n\r\nclass Header extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"ui menu\">\r\n                <Link to=\"/dashboard\" className=\"item\">Dashboard</Link>\r\n                <Link to=\"/transactions\" className=\"item\">Transactions</Link>\r\n                <Link to=\"/add_transaction\" className=\"item\">Add Transaction</Link>\r\n                <Link to=\"/\" className=\"right item\" onClick={e => this.props.signOut()}>Sign Out</Link>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect(null, { signOut })(Header);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Graph from './Graph';\r\nimport Holdings from './Holdings';\r\nimport Header from '../Header';\r\nimport { useHistory } from 'react-router-dom';\r\nimport fire from '../../firebase';\r\nimport { cryptoPrices } from '../../actions';\r\n\r\nconst Dashboard = ({ cryptoPrices, transactions, uniqueCrypto }) => {\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        fire.auth().onAuthStateChanged((user) => {\r\n            if (!user) {\r\n                history.push(process.env.PUBLIC_URL);\r\n            }\r\n\r\n            const uniqueCryptoList = () => {\r\n                if (Object.keys(uniqueCrypto).length !== 0 && user){\r\n                    const ulist = uniqueCrypto.data.map(crypto => {\r\n                        return cryptoPrices(crypto.coin_id);\r\n                        });\r\n                        return ulist;\r\n                    }\r\n                }\r\n                return uniqueCryptoList(); \r\n            } \r\n        )\r\n        \r\n    }, [cryptoPrices, transactions, uniqueCrypto, history]);\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Graph />\r\n            <Holdings />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        crypto: state.crypto,\r\n        transactions: state.transactions,\r\n        uniqueCrypto: state.uniqueCrypto\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { cryptoPrices })(Dashboard);\r\n","import React from 'react';\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../actions';\r\nimport './SignUp.css';\r\n\r\nconst SignUp = ({ signUp }) => {\r\n    const renderError = ({ error, touched }) => {\r\n        if (touched && error){\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const renderInput = ({ input, label, meta, type, icon }) => {\r\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <div className=\"ui left icon input\">\r\n                    <i className={icon}></i>\r\n                    <input {...input} autoComplete=\"off\" type={input.type} />\r\n                </div>\r\n                {renderError(meta)}\r\n            </div>\r\n        );   \r\n    };\r\n\r\n    const onSubmit = (formValues) => {\r\n        signUp(formValues);\r\n    }\r\n\r\n    return (\r\n        <div className=\"signup-form-container\">\r\n            <div className=\"ui segment teal signup-form\">\r\n                <div className=\"column\">\r\n                    <h2 className=\"ui header\">Sign up</h2>\r\n                        <Form\r\n                            onSubmit={onSubmit}\r\n                            validate={(formValues) => {\r\n                                const errors = {}; \r\n                            \r\n                                if (!formValues.email) {\r\n                                    errors.email = 'You must enter an email';\r\n                                }\r\n                            \r\n                                if (!formValues.password) {\r\n                                    errors.password = 'You must enter a password';\r\n                                }\r\n                            \r\n                                if (!formValues.confirmPassword) {\r\n                                    errors.confirmPassword = 'You must enter a password';\r\n                                }\r\n                            \r\n                                if (formValues.password !== formValues.confirmPassword) {\r\n                                    errors.confirmPassword = 'You must enter a matching password';\r\n                                } \r\n                            \r\n                                return errors;\r\n                            }}>\r\n                            {({ handleSubmit }) => (\r\n                                <form onSubmit={handleSubmit} className=\"ui form error\">\r\n                                        <Field name=\"email\" type=\"text\" component={renderInput} label=\"Email\" icon=\"user icon\" />\r\n                                        <Field name=\"password\" type=\"password\" component={renderInput} label=\"Password\" icon=\"lock icon\" />\r\n                                        <Field name=\"confirmPassword\" type=\"password\" component={renderInput} label=\"Confirm Password\" icon=\"lock icon\" />\r\n                                        <button className=\"ui fluid teal submit button\">Create Account</button>\r\n                                </form>\r\n                            )}\r\n                        </Form>\r\n                </div>\r\n                <div className=\"ui message signup-content\">Already have an account? <Link to=\"/\">Sign-in</Link></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(null, { signUp })(SignUp);\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../actions';\r\nimport fire from '../firebase';\r\nimport './SignUp.css';\r\n\r\nconst SignIn = ({ signIn, auth }) => {\r\n    let history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        fire.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                history.push('/dashboard');\r\n            }\r\n        });\r\n    })\r\n\r\n    const renderError = ({ error, touched}) => {\r\n        if (touched && auth.errorMessage){\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{auth.errorMessage}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const renderInput = ({ input, label, meta, type, icon }) => {\r\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <div className=\"ui left icon input\">\r\n                    <i className={icon}></i>\r\n                    <input {...input} autoComplete=\"off\" type={input.type} />\r\n                </div>\r\n                {renderError(meta)}\r\n            </div>\r\n        );   \r\n    };\r\n\r\n    const onSubmit = (formValues) => {\r\n        try {\r\n            signIn(formValues);\r\n        }\r\n        catch(e) { \r\n            console.log(e); \r\n        }\r\n\r\n    }\r\n\r\n    const guestAccount = (e) => {\r\n        try {\r\n            signIn(e);\r\n        }\r\n        catch(e) { \r\n            console.log(e); \r\n        }\r\n        \r\n    }\r\n\r\n    const guestDetails = {\r\n        email: 'guest-account@xavdev.io',\r\n        password: 'guestaccount123!',\r\n    }\r\n\r\n    return (\r\n            <div className=\"signup-form-container\">\r\n                <div className=\"ui segment teal signup-form\">\r\n                    <div className=\"column\">\r\n                        <h2 className=\"ui header\">Sign In</h2>\r\n                        <Form\r\n                            onSubmit={onSubmit}\r\n                            validate={(formValues) => {\r\n                                const errors = {};\r\n                                if (!formValues.email) {\r\n                                    errors.email = 'You must enter an email';\r\n                                }\r\n                            \r\n                                if (!formValues.password) {\r\n                                    errors.password = 'You must enter a password';\r\n                                }\r\n                                return errors;\r\n\r\n                            }}>\r\n                            {({ handleSubmit }) => (\r\n                                <form onSubmit={handleSubmit} className=\"ui form error\">\r\n                                        <Field name=\"email\" type=\"text\" component={renderInput} label=\"Email\" icon=\"user icon\" />\r\n                                        <Field name=\"password\" type=\"password\" component={renderInput} label=\"Password\" icon=\"lock icon\" />\r\n                                        <button className=\"ui fluid teal submit button\">Sign In</button>\r\n                                </form> \r\n                            )}\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"ui message signup-content\">Don't have an account? <Link to=\"/signup\">Sign-up</Link><div>Or, snoop around with the <Link to=\"/dashboard\" onClick={e=> {guestAccount(guestDetails)}}>Demo Account</Link></div></div>\r\n                </div>\r\n            </div> \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { auth: state.auth}\r\n}\r\n \r\nexport default connect(mapStateToProps, { signIn })(SignIn);\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from '../Header';\r\nimport { cryptoList, writeTransaction } from '../../actions';\r\nimport Select from 'react-select';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { format, isValid, toDate, parseISO } from \"date-fns\";\r\nimport fire from '../../firebase';\r\nimport NumberFormat from 'react-number-format';\r\nimport './AddTransaction.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nconst AddTransaction = ({ cryptoList, coinList, writeTransaction }) => {\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        fire.auth().onAuthStateChanged((user) => {\r\n            if (!user) {\r\n                history.push('/');\r\n            }\r\n       \r\n            if (user && Object.keys(coinList).length === 0 ){\r\n                    cryptoList();\r\n            }\r\n        })\r\n\r\n    }, [coinList, cryptoList, history]);\r\n\r\n    const onSubmit = (formValues) => {\r\n        try {\r\n            fire.auth().onAuthStateChanged((user) => {\r\n                writeTransaction(formValues, user.uid);\r\n            });\r\n            history.push('/transactions');\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const renderDropDown = ({ input, label, meta }) => {\r\n        const className = `form-style ui field ${meta.error && meta.touched ? 'error' : ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label className=\"label-style\">{label}</label>\r\n                <Select {...input} autoComplete=\"off\" type=\"text\" options={coinList.data} className=\"input-style\" />\r\n                \r\n            </div>\r\n        );   \r\n    };\r\n\r\n    const RenderDatePicker = ({ name, label, input, meta, input: { value, onChange } }) => {\r\n        const className = `form-style ui field ${meta.error && meta.touched ? 'error' : ''}`\r\n        return (\r\n            <div className={className}>\r\n            <label className=\"label-style\">{label}</label>\r\n                <DatePicker\r\n                {...input}\r\n                className=\"input-style\"\r\n                placeholderText=\"Enter date\"    \r\n                dateFormat=\"P\"\r\n                selected={value && isValid(parseISO(value)) ? toDate(parseISO(value)): null} // needs to be checked if it is valid date\r\n                disabledKeyboardNavigation\r\n                name={name}\r\n                onChange={(date) => {\r\n                // On Change, you should use final-form Field Input prop to change the value\r\n                if (isValid(date)) {\r\n                    input.onChange(format(new Date(date), \"dd-MM-yyyy\"));\r\n                }\r\n                else {\r\n                input.onChange(null);\r\n                }\r\n                }}\r\n            />\r\n        </div>\r\n        );\r\n      };\r\n      \r\n\r\n    const renderQuantity = ({ label, input, meta, placeholder }) => {\r\n        const className = `form-style ui field ${meta.error && meta.touched ? 'error' : ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label className=\"label-style\">{label}</label>\r\n                <NumberFormat {...input} autoComplete=\"off\" type=\"text\" className=\"input-style\" placeholder={placeholder} thousandSeparator={true} />\r\n                \r\n            </div>\r\n        );   \r\n    };\r\n\r\n    const renderValue = ({ label, input, meta, placeholder }) => {\r\n        const className = `form-style ui field ${meta.error && meta.touched ? 'error' : ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label className=\"label-style\">{label}</label>\r\n                <NumberFormat {...input} autoComplete=\"off\" type=\"text\" className=\"input-style\" placeholder={placeholder} prefix={'£'} thousandSeparator={true} />\r\n            </div>\r\n            \r\n        );   \r\n    };\r\n\r\n    const renderRadio = ({ label, input, meta, placeholder }) => {\r\n        const className = `ui field ${meta.error && meta.touched ? 'error' : ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete=\"off\" type=\"radio\" placeholder={placeholder} />\r\n            </div>\r\n        );   \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"ui container\">\r\n                <div className=\"ui segment teal\">\r\n                        <h3 className=\"ui dividing header\">Add Transaction</h3>\r\n                        <Form\r\n                            onSubmit={onSubmit}\r\n                            validate={(formValues) => {\r\n                                const errors = {};\r\n                                if (!formValues.type) {\r\n                                    errors.type = 'You must select a transaction type';\r\n                                }\r\n\r\n                                if (!formValues.selectDate) {\r\n                                    errors.selectDate = 'You must select a transaction date';\r\n                                }\r\n\r\n                                if (!formValues.selectCoin) {\r\n                                    errors.selectCoin = 'You must select a coin';\r\n                                }\r\n\r\n                                if (!formValues.quantity) {\r\n                                    errors.quantity = 'You must enter a quantity';\r\n                                }\r\n\r\n                                if (!formValues.totalValue) {\r\n                                    errors.totalValue = 'You must enter a value';\r\n                                }\r\n                                return errors;\r\n\r\n                            }}>\r\n                            {({ handleSubmit }) => (\r\n                                <form onSubmit={handleSubmit} className=\"ui form error\">\r\n                                    <div className=\"form-container\">\r\n                                        <div className=\"radio-style right\">\r\n                                            <Field name=\"type\" component={renderRadio} type=\"radio\" label=\"Bought\" value=\"Bought\"/>\r\n                                            <Field name=\"type\" component={renderRadio} type=\"radio\" label=\"Sold \"value=\"Sold\" />\r\n                                        </div>\r\n                                        <Field name=\"selectDate\" component={RenderDatePicker} label=\"Transaction Date\" />\r\n                                        <Field name=\"selectCoin\" component={renderDropDown} label=\"Select Coin\" />\r\n                                        <Field name=\"quantity\" component={renderQuantity} label=\"Quantity\" />\r\n                                        <Field name=\"totalValue\" component={renderValue} label=\"Total Value\" placeholder=\"£\" />\r\n                                        <button className=\"ui fluid teal submit button\">Save</button>\r\n                                    </div>\r\n\r\n                                </form> \r\n                            )}  \r\n                        </Form>\r\n                    </div>\r\n            </div> \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        coinList: state.cryptoList\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { cryptoList, writeTransaction })(AddTransaction);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getTransactions, removeTransaction } from '../../actions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport fire from '../../firebase';\r\nimport NumberFormat from 'react-number-format';\r\nimport Header from '../Header';\r\nimport './Transactions.css';\r\n\r\nconst Transactions = ({ transactions, getTransactions, removeTransaction }) => {\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        fire.auth().onAuthStateChanged((user) => {\r\n            if (!user) {\r\n                history.push('/');\r\n            }\r\n\r\n            if (user && Object.keys(transactions).length === 0){\r\n                getTransactions(user.uid);\r\n            }\r\n        })  \r\n        \r\n    }, [getTransactions, transactions, history]);\r\n\r\n    const sumQuantity= () => {\r\n        if(transactions) {\r\n            const sumList = transactions.transactions.reduce((a, b) => {\r\n                return a + +b.quantity;\r\n            }, 0);\r\n            return sumList;\r\n        }  \r\n    }\r\n    const sumValue = () => {\r\n        if(transactions) {\r\n            const sumList = transactions.transactions.reduce((a, b) => {\r\n                return a + +b.total_value;\r\n            }, 0);\r\n            return sumList;\r\n        }  \r\n    }\r\n\r\n    const renderTransactions = () => {\r\n        if (transactions){\r\n            const list = transactions.transactions.map(t => {\r\n            return (\r\n                <tbody key={t.id}>\r\n                    <tr>\r\n                        <td data-label=\"Transaction Date\">{t.transaction_date}</td>\r\n                        <td data-label=\"Coin\">{t.coin}</td>\r\n                        <td data-label=\"Type\">{t.type}</td>\r\n                        <td data-label=\"Quantity\"><NumberFormat value={t.quantity} decimalScale={2} thousandSeparator={true} displayType={'text'} /></td>\r\n                        <td data-label=\"Price per coin\"><NumberFormat value={t.total_value/t.quantity} decimalScale={2} thousandSeparator={true} prefix={'£'} displayType={'text'} /></td>\r\n                        <td data-label=\"Value\"><NumberFormat value={t.total_value} thousandSeparator={true} prefix={'£'} displayType={'text'} /></td>\r\n                        <td><i className=\"red close icon\" onClick={e => removeTransaction(t.id)}></i></td>\r\n                    </tr>\r\n                </tbody>\r\n            );\r\n        })\r\n        return list;\r\n    }\r\n    \r\n}\r\n\r\n    if (Object.keys(transactions).length === 0){\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"ui segment teal\">\r\n                <h3 className=\"ui dividing header\">View your transactions</h3>\r\n                <table className=\"ui celled table unstackable\">\r\n                    <thead>\r\n                            <tr>\r\n                                <th>Transaction Date</th>\r\n                                <th>Coin</th>\r\n                                <th>Type</th>\r\n                                <th>Quantity</th>\r\n                                <th>Price per coin</th>\r\n                                <th>Value</th> \r\n                                <th>Options</th>\r\n                            </tr>\r\n                        </thead>\r\n                    {renderTransactions()}\r\n                    <tfoot>\r\n                        <tr>\r\n                            <th>Total</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th><NumberFormat value={sumQuantity()} displayType={'text'} decimalScale={2} thousandSeparator={true} /></th>\r\n                            <th><NumberFormat value={sumValue()/sumQuantity()} decimalScale={2} displayType={'text'} prefix={'£'} thousandSeparator={true} /></th>\r\n                            <th><NumberFormat value={sumValue()} displayType={'text'} prefix={'£'} decimalScale={2} thousandSeparator={true} /></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({ \r\n        transactions: state.transactions,\r\n     })\r\n};\r\n\r\nexport default connect(mapStateToProps, { getTransactions, removeTransaction })(Transactions);","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Dashboard from './tracker/Dashboard';\r\nimport SignUp from './SignUp';\r\nimport SignIn from './SignIn';\r\nimport AddTransaction from './tracker/AddTransaction';\r\nimport Transactions from './tracker/Transactions';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <div>\r\n                    <Route path=\"/\" exact component={SignIn} />\r\n                    <Route path=\"/signup\" component={SignUp} />\r\n                    <Route path=\"/dashboard\" component={Dashboard} />\r\n                    <Route path=\"/add_transaction\" component={AddTransaction} />\r\n                    <Route path=\"/transactions\" component={Transactions} />\r\n                </div>\r\n           </BrowserRouter>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;","const INITIAL_STATE = {\r\n    isSignedIn: null,\r\n    userId: null,\r\n    errorMessage: \"\"  \r\n};\r\n\r\n\r\nconst authReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'SIGN_IN':\r\n            return { ...state, isSignedIn: true, userId: action.payload };\r\n        case 'SIGN_OUT':\r\n            return { ...state, isSignedIn: false, userId: null };\r\n        case 'SIGN_UP':\r\n            return { ...state, isSignedIn: true, userId: action.payload };\r\n        case 'ERROR_SIGN_IN':\r\n            return { ...state, isSignedIn: false, userId: null, errorMessage: action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default authReducer;","const cryptoListReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'CRYPTO_LIST':\r\n            return { ...state, data: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cryptoListReducer;","const cryptoReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'CRYPTO_PRICES':\r\n            return { ...state, [action.name]: action.payload };\r\n        case 'CLEAR_PRICES':\r\n            return { ...state = {} };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cryptoReducer;","const firebaseReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'WRITE_TRANSACTIONS':\r\n            return { ...state, transactions: action.payload };\r\n        case 'GET_TRANSACTIONS':\r\n            return { ...state, transactions: action.payload };\r\n        case 'CLEAR_TRANSACTIONS':\r\n            return { ...state = {} };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default firebaseReducer;","const uniqueCryptoReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'UNQIUE_CRYPTO':\r\n            return { ...state, data: action.payload };\r\n        case 'CLEAR_UNIQUE_CRYPTO':\r\n            return { ...state = {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default uniqueCryptoReducer;","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport cryptoListReducer from \"./cryptoListReducer\";\r\nimport cryptoReducer from \"./cryptoReducer\";\r\nimport firebaseReducer from \"./firebaseReducer\";\r\nimport uniqueCryptoReducer from \"./uniqueCryptoReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    crypto: cryptoReducer,\r\n    cryptoList: cryptoListReducer,\r\n    transactions: firebaseReducer,\r\n    uniqueCrypto: uniqueCryptoReducer\r\n    \r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers/index';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>, \r\n    document.querySelector('#root'));"],"sourceRoot":""}